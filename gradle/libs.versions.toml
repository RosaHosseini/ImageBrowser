[versions]
# Gradle
accompanistInsets = "0.22.0-rc"
agp = "8.2.2"
# Kotlin
kotlin = "1.9.22"
immutableCollections = "0.3.5"
coroutines = "1.7.3"
ksp = "1.9.22-1.0.16"
annotationJvm = "1.7.1"
lifecycle = "2.7.0"
activity = "1.8.2"
dataStore = "1.0.0"
androidXCore = "1.12.0"
# Compose
composeBom = "2023.10.01"
composeGoogleMaps = "2.7.2"
composeCompiler = "1.5.8"
composeNavigation = "2.7.5" # do not upgrade to "2.7.6" app crashes
coil = "2.5.0"
telephoto = "0.7.1"
constraintLayout = "1.0.1"
flowLayout = "0.32.0"
# Hilt
hilt = "2.50"
hiltNavigationCompose = "1.1.0"
# Network
retrofit = "2.9.0"
okhttpBom = "4.11.0"
gson = "2.10.1"
#Logging
timber = "5.0.1"

# Test
mockk = "1.13.5"
kluent = "1.72"
turbine = "1.0.0"
junit5 = "5.9.3"
# Static Analysis
ktlint = "0.48.2"
ktlintPlugin = "11.5.0"
detekt = "1.23.4"
detektCompose = "0.3.9"
# Adyen
adyen = "5.0.1"
# Lottie
lottie = "6.1.0"
uiautomator = "2.2.0"
# Calendar
calendar = "2.4.0"
# Tealium
tealium = "1.5.5"
tealiumTagManagement = "1.2.1"
tealiumInstallReferrer = "1.1.0"
tealiumLifecycle = "1.1.0"
tealiumAdIdentifier = "1.1.0"
androidInstallReferrer = "2.2"
googlePlay = "1.8.1"
libPhoneNumber = "8.13.29"
room = "2.6.1"
hiltWork = "1.1.0"
workManager = "2.9.0"

[plugins]
kotlinParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
# Android
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
# Kotlin
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# Static Analysis
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

[libraries]
accompanistInsets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanistInsets" }
dataStore = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "dataStore" }
# Room
roomCommon = { group = "androidx.room", name = "room-common", version.ref = "room" }
# Lifecycle
lifecycleCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycleViewModel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycleRuntime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
# Compose
composeActivity = { group = "androidx.activity", name = "activity-compose", version.ref = "activity" }
composeNavigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "composeNavigation" }
composeBom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
composeRuntime = { group = "androidx.compose.runtime", name = "runtime" }
composeMaterial3 = { group = "androidx.compose.material3", name = "material3" }
composeTooling = { group = "androidx.compose.ui", name = "ui-tooling" }
constraintlayoutCompose = { group = "androidx.constraintlayout", name = "constraintlayout-compose", version.ref = "constraintLayout" }
composeGoogleMaps = { group = "com.google.maps.android", name = "maps-compose", version.ref = "composeGoogleMaps" }
composeCoil = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }
telephoto = { group = "me.saket.telephoto", name = "zoomable-image-coil", version.ref = "telephoto" }
composeCalendar = { group = "com.kizitonwose.calendar", name = "compose", version.ref = "calendar" }
composeFlowLayout = { group = "com.google.accompanist", name = "accompanist-flowlayout", version.ref = "flowLayout" }
# Android X
coreKtx = { group = "androidx.core", name = "core-ktx", version.ref = "androidXCore" }
# Hilt
hiltAndroid = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hiltCore = { group = "com.google.dagger", name = "hilt-core", version.ref = "hilt" }
hiltCompiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hiltNavigationCompose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
# Kotlin
coroutinesCore = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesAndroid = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
immutableCollections = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "immutableCollections" }
# Network
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofitGsonConverter = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
okhttpBom = { group = "com.squareup.okhttp3", name = "okhttp-bom", version.ref = "okhttpBom" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp" }
okhttpLoggingInterceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor" }
# WorkManager
workManagerHilt = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltWork" }
workManagerRuntime = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workManager" }

#Logging
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

# Static Analysis
detektCompose = { group = "io.nlopez.compose.rules", name = "detekt", version.ref = "detektCompose" }

# Test
testCoroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }
testMockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
testKluent = { group = "org.amshove.kluent", name = "kluent", version.ref = "kluent" }
testTurbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
testJunitKotlin = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit", version.ref = "kotlin" }
testJunitJupiterApi = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit5" }
annotationJvm = { group = "androidx.annotation", name = "annotation-jvm", version.ref = "annotationJvm" }
[bundles]
# Test
testCore = [
    "testMockk",
    "testKluent",
    "testTurbine",
    "testCoroutines",
    "testJunitKotlin",
    "testJunitJupiterApi",
]
